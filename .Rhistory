load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Exponential model/exponential_simulations1.RData")
quant.emp.cov.exp
quant.emp.cov.exp <- quant.emp.cov.exp1
quant.emp.cov.exp1 <- quant.emp.cov.exp2
quant.emp.cov.exp1 <- quant.emp.cov.exp
wald.emp.cov.exp1 <- wald.emp.cov.exp
hpd.emp.cov.exp1 <- hpd.emp.cov.exp
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Exponential model/exponential_simulations2.RData")
quant.emp.cov.exp2 <- quant.emp.cov.exp
wald.emp.cov.exp2 <- wald.emp.cov.exp
hpd.emp.cov.exp2 <- hpd.emp.cov.exp
mean(quant.emp.cov.exp1, quant.emp.cov.exp2)
quant.emp.cov.exp1 + quant.emp.cov.exp2
(quant.emp.cov.exp1 + quant.emp.cov.exp2)/2
quant.emp.cov.exp1
quant.emp.cov.exp2
quant.emp.cov.exp <- (quant.emp.cov.exp1 + quant.emp.cov.exp2)/2
quant.emp.cov.exp
library(xtable)
xtable(quant.emp.cov.exp)
wald.emp.cov.exp <- (wald.emp.cov.exp1 + wald.emp.cov.exp2)/2
xtable(wald.emp.cov.exp)
hpd.emp.cov.exp <- (hpd.emp.cov.exp1 + hpd.emp.cov.exp2)/2
xtable(hpd.emp.cov.exp)
rm(list = ls())
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Gumbel model/gumbel_simulations3.RData")
quant.emp.cov.gum
wald.emp.cov.gum
hpd.emp.cov.gum
rm(list = ls())
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Fréchet model/frechet_complete.RData")
sapply(1:3, function(x) summary(fit.bayes.fre$parameters[,x]))
rm(list = ls())
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Exponential model/exponential_complete.RData")
sapply(1:3, function(x) summary(fit.bayes.exp$parameters[,x]))
rm(list = ls())
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Power-law model/powerlaw_complete.RData")
sapply(1:3, function(x) summary(fit.bayes.pl$parameters[,x]))
rm(list = ls())
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Fréchet model/frechet_complete.RData")
sapply(1:3, function(x) summary(fit.bayes.fre$parameters[,x]))
#Parameters
fit.bayes.fre$mle; fit.bayes.fre$mode; true.par.fre.tilde
rm(list = ls())
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Fréchet model/frechet_bar_simulations.RData")
rm(list = ls())
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Fréchet model/frechet_simulations.RData")
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Exponential model/exponential_simulations1.RData")
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Exponential model/exponential_simulations2.RData")
load("C:/Users/scanz/OneDrive - Università Commerciale Luigi Bocconi/Desktop/Magistrale/Extreme Value Theory/Code/Power-law model/powerlaw_simulations.RData")
#Bayesian censored Peaks over threshold complete analysis
#Exponential model
#-------------------------------------------------------------------------------
path <- "C:\\Users\\scanz\\OneDrive - Università Commerciale Luigi Bocconi\\Desktop/Magistrale\\Extreme Value Theory\\Code\\"
setwd(path)
source(paste0(path ,"functions.R"))
#-------------------------------------------------------------------------------
#Simulation setting
library(LaplacesDemon)
library(TeachingDemos)
library(evd)
library(tictoc)
library(mvtnorm)
library(plyr)
library(coda)
#Sample size
n <- 10000
#Exceeding probability used in the estimation
t.prob <- 0.05
#Number of exceedances used in the estimation
k <- n * t.prob
#Block-size for the correspoding block maxima approach
m <- 1/t.prob
#Inverse of the proportion of exceedances: s = n/k
s <- n/k
#Exceeding probability used for prediction --> extreme quantile
p <- 1/n
#Return period --> return level
T.ret <- 50
#Posterior sample size
R <- 60000
#Burn-in period
burn <- 10000
#Number of MCMC chains for diagnostics
nchains <- 5
#-------------------------------------------------------------------------------
#Exponential(1) (tail index = 0)
#Exponential parameters
rate.exp <- 1
#Set norming constants
#Centering
bn.exp <- log(n) - log(k)
#Scaling
an.exp <- 1
an2.exp <- 1
#Define the true parameters: tilde parameterization
true.par.exp.tilde <- c(0, bn.exp, an.exp); true.par.exp.tilde
#Define the true parameters: bar parameterization
delta.bar <- an.exp
mu.bar <- bn.exp - (an.exp*log(s))
true.par.exp.bar <- c(0, mu.bar, delta.bar); true.par.exp.bar
#Define true extreme quantile
Q.ext.true.exp <- qexp(1 - p, rate.exp)
#Define true return level
R.lev.true.exp <- qgev(1 - 1/T.ret, bn.exp, an.exp, 0)
#Define the estimation setting
start.exp <- c(0.1, 1, 1)
set.seed(2)
data.exp <- rexp(n, rate.exp)
th.exp <- quantile(data.exp, probs = 1 - t.prob, type = 3)
#Define threshold exceedances
excess.exp <- data.exp[data.exp > th.exp]
hist(data.exp, probability = T, nclass = 1000,
xlab = "Sample", ylab = "Histogram", main = "",
xlim = c(0, 10))
curve(dexp(x, rate = rate.exp), add = TRUE, col = "red",
lwd = 4, lty = 3)
abline(v = th.exp, col = "blue", lty = "dashed", lwd = 3)
curve(dgev.tilde.V(x, par = true.par.exp.tilde, s = s), add = TRUE,
col = "orange", lwd = 4, lty = 5)
legend("topright", legend = c("Vera densità", "Soglia di censura",
"Densità asintotica GEV"),
lty = c(3, 2, 5), lwd = c(4, 3, 4),
col = c("red", "blue", "orange"))
hist(data.pl, probability = T, nclass = 1000,
xlab = "Sample", ylab = "Histogram", main = "",
xlim = c(0, xstar.pl + 2))
#Bayesian censored Peaks over threshold complete analysis
#Power-Law model
#-------------------------------------------------------------------------------
path <- "C:\\Users\\scanz\\OneDrive - Università Commerciale Luigi Bocconi\\Desktop/Magistrale\\Extreme Value Theory\\Code\\"
setwd(path)
source(paste0(path ,"functions.R"))
#-------------------------------------------------------------------------------
#Simulation setting
library(LaplacesDemon)
library(TeachingDemos)
library(evd)
library(tictoc)
library(mvtnorm)
library(plyr)
library(coda)
#Sample size
n <- 10000
#Exceeding probability used in the estimation
t.prob <- 0.05
#Number of exceedances used in the estimation
k <- n * t.prob
#Block-size for the correspoding block maxima approach
m <- 1/t.prob
#Inverse of the proportion of exceedances: s = n/k
s <- n/k
#Exceeding probability used for prediction --> extreme quantile
p <- 1/n
#Return period --> return level
T.ret <- 50
#Posterior sample size
R <- 60000
#Burn-in period
burn <- 10000
#Number of MCMC chains for diagnostics
nchains <- 5
#-------------------------------------------------------------------------------
#Power Law distribution (tail index = -1/3)
#F(x) = 1 - K(x* - x)^(alpha);
#x* = 5: end-point of the distribution;
#alpha = 3: shape parameter;
#K = 1/9 positive constant.
K <- 1/9
#Power Law cdf
pl.cdf <- function(x, xstar, alpha, K){
#K <- 1/9
cdf <- 1 - K*(xstar - x)^alpha
return(cdf)
}
#Power law pdf
pl.pdf <- function(x, xstar, alpha, K){
#K <- 1/9
pdf <- K*alpha*(xstar - x)^(alpha - 1)
return(pdf)
}
#Power law quantile function
pl.qdf <- function(p, xstar, alpha, K){
#K <- 1/9
qdf <- xstar - ((1 - p)/K)^(1/alpha)
return(qdf)
}
#Power Law parameters
xstar.pl <- 5
alpha.pl <- 3
#Set norming constants
#Centering
bn.pl <- xstar.pl - (k/(n*K))^(1/alpha.pl)
#Scaling
an.pl <- (1/alpha.pl)*((k/(n*K))^(1/alpha.pl))
#Define the true parameters: tilde parameterization
true.par.pl.tilde <- c(-1/alpha.pl, bn.pl, an.pl); true.par.pl.tilde
#Define the true parameters: bar parameterization
delta.bar <- s^(-(-1/alpha.pl))*an.pl
mu.bar <- bn.pl - an.pl*(1 - s^(-(-1/alpha.pl)))/(-1/alpha.pl)
true.par.pl.bar <- c(-1/alpha.pl, mu.bar, delta.bar); true.par.pl.bar
#Define true extreme quantile
Q.ext.true.pl <- pl.qdf(1 - p, xstar.pl, alpha.pl, K = K)
#Define true return level
R.lev.true.pl <- qgev(1 - 1/T.ret, bn.pl, an.pl, -1/alpha.pl)
#Define the estimation setting
start.pl <- c(0.1, 2, 1)
set.seed(3)
data.pl <- pl.qdf(runif(n), xstar.pl, alpha.pl, K = K)
th.pl <- quantile(data.pl, probs = 1 - t.prob, type = 3)
#Define threshold exceedances
excess.pl <- data.pl[data.pl > th.pl]
hist(data.pl, probability = T, nclass = 1000,
xlab = "Sample", ylab = "Histogram", main = "",
xlim = c(0, xstar.pl + 2))
curve(pl.pdf(x, xstar = xstar.pl, alpha = alpha.pl, K = K),
from = 0, to = xstar.pl,
add = TRUE, col = "red", lwd = 4, lty = 3)
abline(v = th.pl, col = "blue", lty = "dashed", lwd = 3)
curve(dgev.tilde.V(x, par = true.par.pl.tilde, s = s), add = TRUE,
col = "orange", lwd = 4, lty = 5)
legend("topright", legend = c("Vera densità", "Soglia di censura",
"Densità asintotica GEV"),
lty = c(3, 2, 5), lwd = c(4, 3, 4),
col = c("red", "blue", "orange"))
quant.emp.cov.fre
plot(c(40,60,109,234), quant.emp.cov.fre[1,], col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche", main = "Modello Fréchet")
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche", main = "Modello Fréchet")
help(plot)
min(quant.emp.cov.fre); max(quant.emp.cov.fre)
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche", main = "Modello Fréchet",
ylim = c(0.795, 1))
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche", main = "Modello Fréchet",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
plot(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3)
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche", main = "Modello Fréchet",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
plot(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
quant.emp.cov.fre
min(quant.emp.cov.fre); max(quant.emp.cov.fre)
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche", main = "Modello Fréchet",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = 4, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[4,], type = "l", col = 5, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[5,], type = "l", col = 6, lwd = 2,
add = TRUE)
quant.emp.cov.fre
min(quant.emp.cov.fre); max(quant.emp.cov.fre)
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche", main = "Modello Fréchet",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = "yellow", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
quant.emp.cov.fre
min(quant.emp.cov.fre); max(quant.emp.cov.fre)
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche", main = "Modello Fréchet",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = "violet", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
82.85 - 1.89 - 3.29 - 2.25 - 1.99  - 10.90 - 1.38 - 2.99
82.85 - 1.89 - 3.29 - 2.25 - 1.99  - 10.90 - 1.38 - 2.69 -5.99
8 + 10 + 8 + 15
8 + 10 + 8 + 15 + 4
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "Modello Fréchet",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = "violet", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "Modello Fréchet",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
quant.emp.cov.fre
min(quant.emp.cov.fre); max(quant.emp.cov.fre)
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "Modello Fréchet, intervalli quantile",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
wald.emp.cov.exp
wald.emp.cov.exp
min(wald.emp.cov.exp); max(wald.emp.cov.exp)
plot(c(40,60,109,234), wald.emp.cov.exp[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "Modello Esponenziale, intervalli Gaussiani",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), wald.emp.cov.exp[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
min(wald.emp.cov.exp); max(wald.emp.cov.exp)
wald.emp.cov.exp
min(wald.emp.cov.exp); max(wald.emp.cov.exp)
plot(c(40,60,109,234), wald.emp.cov.exp[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "Modello Esponenziale, intervalli Gaussiani",
ylim = c(0.9, 1))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), wald.emp.cov.exp[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
hpd.emp.cov.pl
min(hpd.emp.cov.pl); max(hpd.emp.cov.pl)
hpd.emp.cov.pl
min(hpd.emp.cov.pl); max(hpd.emp.cov.pl)
plot(c(40,60,109,234), hpd.emp.cov.pl[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "Modello Power-Law, intervalli HPD",
ylim = c(0.92, 0.99))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), hpd.emp.cov.pl[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
hpd.emp.cov.pl
par(mfrow = c(1,3))
quant.emp.cov.fre
min(quant.emp.cov.fre); max(quant.emp.cov.fre)
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "Modello Fréchet, intervalli quantile",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
wald.emp.cov.exp
min(wald.emp.cov.exp); max(wald.emp.cov.exp)
plot(c(40,60,109,234), wald.emp.cov.exp[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "Modello Esponenziale, intervalli Gaussiani",
ylim = c(0.9, 1))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), wald.emp.cov.exp[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
hpd.emp.cov.pl
min(hpd.emp.cov.pl); max(hpd.emp.cov.pl)
plot(c(40,60,109,234), hpd.emp.cov.pl[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "Modello Power-Law, intervalli HPD",
ylim = c(0.92, 0.99))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), hpd.emp.cov.pl[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
par(mfrow = c(1,1))
par(mfrow = c(1,1))
par(mfrow = c(1,1))
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "",
ylim = c(0.795, 0.985))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
plot(c(40,60,109,234), wald.emp.cov.exp[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "",
ylim = c(0.9, 1))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), wald.emp.cov.exp[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
plot(c(40,60,109,234), hpd.emp.cov.pl[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "",
ylim = c(0.92, 0.99))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), hpd.emp.cov.pl[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
min(quant.emp.cov.fre); max(quant.emp.cov.fre)
par(mfrow = c(1,3))
quant.emp.cov.fre
min(quant.emp.cov.fre); max(quant.emp.cov.fre)
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "",
ylim = c(0.8, 1))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
par(mfrow = c(1,1))
quant.emp.cov.fre
min(quant.emp.cov.fre); max(quant.emp.cov.fre)
plot(c(40,60,109,234), quant.emp.cov.fre[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "",
ylim = c(0.8, 1))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), quant.emp.cov.fre[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), quant.emp.cov.fre[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
plot(c(40,60,109,234), wald.emp.cov.exp[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "",
ylim = c(0.8, 1))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), wald.emp.cov.exp[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), wald.emp.cov.exp[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
plot(c(40,60,109,234), hpd.emp.cov.pl[1,], type = "l", col = 2, lwd = 2,
xlab = "s", ylab = "Coperture empiriche al 95%", main = "",
ylim = c(0.8, 1))
abline(h = 0.95, lwd = 2, lty = 2, col = "blue")
lines(c(40,60,109,234), hpd.emp.cov.pl[2,], type = "l", col = 3, lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[3,], type = "l", col = "cyan", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[4,], type = "l", col = "orange", lwd = 2,
add = TRUE)
lines(c(40,60,109,234), hpd.emp.cov.pl[5,], type = "l", col = "grey", lwd = 2,
add = TRUE)
